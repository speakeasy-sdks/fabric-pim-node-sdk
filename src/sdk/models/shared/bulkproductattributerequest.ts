/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Action to perform. `id` is required only for `UPDATE`, or `DELETE` (not for CREATE). <br> **Note**: `CREATE` action replaces any existing item attribute with the same name, if one already exists.
 */
export enum BulkProductAttributeRequestActionEnum {
  Create = "CREATE",
  Update = "UPDATE",
  Delete = "DELETE",
}

export class BulkProductAttributeRequestLocales extends SpeakeasyBase {
  /**
   * Language locale
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locale" })
  locale?: string;

  /**
   * Localized value of 'name' for this attribute
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Conditionally required to indicate the selectable values for the `OPTIONS` attribute type
 */
export enum BulkProductAttributeRequestOptionsTypeEnum {
  Text = "TEXT",
  Boolean = "BOOLEAN",
  Decimal = "DECIMAL",
  Integer = "INTEGER",
  Datetime = "DATETIME",
}

/**
 * Conditionally required sub-type for `TEXT` attribute type
 */
export enum BulkProductAttributeRequestTextSubTypeEnum {
  SmallText = "SMALL_TEXT",
  TextArea = "TEXT_AREA",
  Html = "HTML",
}

/**
 * Attribute type
 */
export enum BulkProductAttributeRequestTypeEnum {
  Text = "TEXT",
  Boolean = "BOOLEAN",
  Serial = "SERIAL",
  Decimal = "DECIMAL",
  Integer = "INTEGER",
  Datetime = "DATETIME",
  Options = "OPTIONS",
}

export enum BulkProductAttributeRequestValidationAttributeTypesEnum {
  Text = "TEXT",
  Boolean = "BOOLEAN",
  Serial = "SERIAL",
  Decimal = "DECIMAL",
  Integer = "INTEGER",
  Asset = "ASSET",
  Datetime = "DATETIME",
  Resource = "RESOURCE",
  DynamicLov = "DYNAMIC_LOV",
}

/**
 * Specified range of values must be between this min and/or max
 */
export class BulkProductAttributeRequestValidationRange extends SpeakeasyBase {
  /**
   * Specified value must be less than or equal to this value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max" })
  max?: any;

  /**
   * Specified value must be greater than or equal to this value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "min" })
  min?: any;
}

export class BulkProductAttributeRequestValidation extends SpeakeasyBase {
  /**
   * Attribute types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributeTypes" })
  attributeTypes?: BulkProductAttributeRequestValidationAttributeTypesEnum[];

  /**
   * Specified value must contain this string
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contains" })
  contains?: string;

  /**
   * Specified value must exactly match this value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exact" })
  exact?: any;

  /**
   * JavaScript expression to determine if the value matches
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formula" })
  formula?: string;

  /**
   * Sequence should increment by this value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "incrementBy" })
  incrementBy?: number;

  /**
   * true: Parent attributes inherited to children items <br> false: Parent attributes not inherited to children items
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inheritable" })
  inheritable?: boolean;

  /**
   * true: Inverts existing validation (example - requires that the validation does not pass) <br> false: Follows existing validation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inverse" })
  inverse?: boolean;

  /**
   * Matches the value if it is one of these
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oneOf" })
  oneOf?: any;

  /**
   * Specified range of values must be between this min and/or max
   */
  @SpeakeasyMetadata()
  @Expose({ name: "range" })
  @Type(() => BulkProductAttributeRequestValidationRange)
  range?: BulkProductAttributeRequestValidationRange;

  /**
   * true: Attribute is mandatory <br> false: Attribute is optional
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required?: boolean;

  /**
   * Sequence should start with this value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startWith" })
  startWith?: number;

  /**
   * true: Specified value is unique across all items or nodes <br> false: Specified value is not unique
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unique" })
  unique?: boolean;
}

export class BulkProductAttributeRequest extends SpeakeasyBase {
  /**
   * Action to perform. `id` is required only for `UPDATE`, or `DELETE` (not for CREATE). <br> **Note**: `CREATE` action replaces any existing item attribute with the same name, if one already exists.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action?: BulkProductAttributeRequestActionEnum;

  /**
   * Attribute description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Attribute format. Currently used only for the attribute type `DATETIME`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format?: string;

  /**
   * JavaScript expression to dynamically compute the attribute's value. The type returned must match the attribute's type. If the attribute is weight, this formula helps calculate the weight. <br> **Note**: When this is provided, `validation` is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formula" })
  formula?: string;

  /**
   * 24-character system-generated attribute ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata({ elemType: BulkProductAttributeRequestLocales })
  @Expose({ name: "locales" })
  @Type(() => BulkProductAttributeRequestLocales)
  locales?: BulkProductAttributeRequestLocales[];

  /**
   * Attribute mapping of item. This corresponds to the `Attribute Mapping` settings of PIM: `sku`, `title`, `image`, `active`, `isVariant`. <br> **Note**: Most attributes do not have a mapping, in which case this will be null. <br> **Warning**: Exercise caution while adding or removing mappings of attributes, as it could lead to bad data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mapping" })
  mapping?: string;

  /**
   * Attribute name, which is visible on all relevant PIM pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Conditionally required to indicate the selectable values for the `OPTIONS` attribute type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "optionsType" })
  optionsType?: BulkProductAttributeRequestOptionsTypeEnum;

  /**
   * Conditionally required to indicate the starting value of `SERIAL` attribute type. When enabled, the subsequent attribute values increment by 1.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serialStart" })
  serialStart?: number;

  /**
   * Conditionally required sub-type for `TEXT` attribute type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textSubType" })
  textSubType?: BulkProductAttributeRequestTextSubTypeEnum;

  /**
   * Attribute type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: BulkProductAttributeRequestTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "validation" })
  @Type(() => BulkProductAttributeRequestValidation)
  validation?: BulkProductAttributeRequestValidation;
}
