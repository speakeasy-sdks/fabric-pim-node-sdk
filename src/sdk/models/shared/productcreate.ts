/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BundleItems } from "./bundleitems";
import { InheritItemAttributesInsert } from "./inherititemattributesinsert";
import { Expose, Type } from "class-transformer";

/**
 * Item type
 */
export enum ProductCreateTypeEnum {
  Item = "ITEM",
  Bundle = "BUNDLE",
}

export class ProductCreate extends SpeakeasyBase {
  /**
   * Attribute details
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributeValues" })
  attributeValues?: any[];

  /**
   * List of items to be added to a bundle. Includes SKU and item quantity.
   */
  @SpeakeasyMetadata({ elemType: BundleItems })
  @Expose({ name: "bundleItems" })
  @Type(() => BundleItems)
  bundleItems?: BundleItems[];

  @SpeakeasyMetadata({ elemType: InheritItemAttributesInsert })
  @Expose({ name: "inheritedAttributes" })
  @Type(() => InheritItemAttributesInsert)
  inheritedAttributes?: InheritItemAttributesInsert[];

  /**
   * Category name (along with parent category names) for which item is being created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nodeName" })
  nodeName: string;

  /**
   * Stock Keeping Unit (SKU) parent item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentSku" })
  parentSku?: string;

  /**
   * Stock Keeping Unit (SKU) of item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku: string;

  /**
   * Item type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: ProductCreateTypeEnum;
}
