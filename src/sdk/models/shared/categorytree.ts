/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attribute } from "./attribute";
import { CategoryChild } from "./categorychild";
import { Expose, Type } from "class-transformer";

/**
 * Category type
 */
export enum CategoryTreeHierarchyEnum {
  Primary = "PRIMARY",
  Alternate = "ALTERNATE",
}

/**
 * OK
 */
export class CategoryTree extends SpeakeasyBase {
  /**
   * Details of attributes belonging to this category
   */
  @SpeakeasyMetadata({ elemType: Attribute })
  @Expose({ name: "attributes" })
  @Type(() => Attribute)
  attributes?: Attribute[];

  /**
   * Children categories of this category
   */
  @SpeakeasyMetadata({ elemType: CategoryChild })
  @Expose({ name: "children" })
  @Type(() => CategoryChild)
  children?: CategoryChild[];

  /**
   * Time of category creation (UTC format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdOn" })
  createdOn?: string;

  /**
   * Category type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hierarchy" })
  hierarchy?: CategoryTreeHierarchyEnum;

  /**
   * 24-character system-generated category ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * true: Category is Active <br> false: Category is Inactive <br> **Note**: Inactive status is not applicable for Primary category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive?: boolean;

  /**
   * Time when category was last updated (UTC format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedOn" })
  modifiedOn?: string;

  /**
   * Category name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Human-readable numeric ID of category, for external users
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nodeId" })
  nodeId?: number;
}
