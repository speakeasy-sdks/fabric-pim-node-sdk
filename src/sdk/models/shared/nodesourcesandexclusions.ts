/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class NodeSourcesAndExclusionsSourceExclusions extends SpeakeasyBase {
  /**
   * Path of categories leading to root of categories
   */
  @SpeakeasyMetadata()
  @Expose({ name: "breadcrumbString" })
  breadcrumbString?: string;

  /**
   * 24-character system-generated category ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Category name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class NodeSourcesAndExclusionsSources extends SpeakeasyBase {
  /**
   * Path of categories leading to source of categories
   */
  @SpeakeasyMetadata()
  @Expose({ name: "breadcrumbString" })
  breadcrumbString?: string;

  /**
   * 24-character system-generated category ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Category name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * OK
 */
export class NodeSourcesAndExclusions extends SpeakeasyBase {
  /**
   * 24-character system-generated category ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Category name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Human-readable numeric ID of category, for external users
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nodeId" })
  nodeId?: number;

  @SpeakeasyMetadata({ elemType: NodeSourcesAndExclusionsSourceExclusions })
  @Expose({ name: "sourceExclusions" })
  @Type(() => NodeSourcesAndExclusionsSourceExclusions)
  sourceExclusions?: NodeSourcesAndExclusionsSourceExclusions[];

  @SpeakeasyMetadata({ elemType: NodeSourcesAndExclusionsSources })
  @Expose({ name: "sources" })
  @Type(() => NodeSourcesAndExclusionsSources)
  sources?: NodeSourcesAndExclusionsSources[];
}
