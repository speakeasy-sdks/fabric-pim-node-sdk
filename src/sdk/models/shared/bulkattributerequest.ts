/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Action type. <br> **Note**: <br> 1) Attribute ID is required only for `UPDATE` and `DELETE` actions (not for CREATE). <br> 2) `CREATE` action replaces any existing category attribute with the same name.
 */
export enum BulkAttributeRequestActionEnum {
  Create = "CREATE",
  Update = "UPDATE",
  Delete = "DELETE",
}

/**
 * Conditionally required to indicate the selectable values for `OPTIONS` attribute type
 */
export enum BulkAttributeRequestOptionsTypeEnum {
  Text = "TEXT",
  Boolean = "BOOLEAN",
  Decimal = "DECIMAL",
  Integer = "INTEGER",
  Datetime = "DATETIME",
}

/**
 * Conditionally required for `TEXT` attribute type
 */
export enum BulkAttributeRequestTextSubTypeEnum {
  SmallText = "SMALL_TEXT",
  TextArea = "TEXT_AREA",
  Html = "HTML",
}

/**
 * Supported attribute types for the attribute
 */
export enum BulkAttributeRequestTypeEnum {
  Text = "TEXT",
  Boolean = "BOOLEAN",
  Serial = "SERIAL",
  Decimal = "DECIMAL",
  Integer = "INTEGER",
  Datetime = "DATETIME",
  Options = "OPTIONS",
}

export enum BulkAttributeRequestValidationAttributeTypesEnum {
  Text = "TEXT",
  Boolean = "BOOLEAN",
  Serial = "SERIAL",
  Decimal = "DECIMAL",
  Integer = "INTEGER",
  Asset = "ASSET",
  Datetime = "DATETIME",
}

/**
 * Specified range of values must be between this min and/or max
 */
export class BulkAttributeRequestValidationRange extends SpeakeasyBase {
  /**
   * Specified value must be less than or equal to this value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max" })
  max?: any;

  /**
   * Specified value must be greater than or equal to this value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "min" })
  min?: any;
}

export class BulkAttributeRequestValidation extends SpeakeasyBase {
  /**
   * List of supported attribute types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributeTypes" })
  attributeTypes?: BulkAttributeRequestValidationAttributeTypesEnum[];

  /**
   * Specified value must contain this string
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contains" })
  contains?: string;

  /**
   * Specified value must exactly match this value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exact" })
  exact?: any;

  /**
   * JavaScript expression to determine if the value matches
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formula" })
  formula?: string;

  /**
   * true: Parent attributes inherited to children items <br> false: Parent attributes not inherited to children items
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inheritable" })
  inheritable?: boolean;

  /**
   * true: Inverts existing validation (example - requires that the validation does not pass) <br> false: Follows existing validation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inverse" })
  inverse?: boolean;

  /**
   * Matches the value if it is one of these
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oneOf" })
  oneOf?: any;

  /**
   * Specified range of values must be between this min and/or max
   */
  @SpeakeasyMetadata()
  @Expose({ name: "range" })
  @Type(() => BulkAttributeRequestValidationRange)
  range?: BulkAttributeRequestValidationRange;

  /**
   * true: Attribute is mandatory <br> false: Attribute is optional
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required?: boolean;

  /**
   * true: Value is unique across all items or categories <br> false: Value is not unique
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unique" })
  unique?: boolean;
}

export class BulkAttributeRequest extends SpeakeasyBase {
  /**
   * Action type. <br> **Note**: <br> 1) Attribute ID is required only for `UPDATE` and `DELETE` actions (not for CREATE). <br> 2) `CREATE` action replaces any existing category attribute with the same name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action: BulkAttributeRequestActionEnum;

  /**
   * Accurate description of the attribute and what it represents
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Attribute format. Currently used only for `DATETIME` attribute type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format?: string;

  /**
   * JavaScript expression to dynamically compute the attribute value. The data type returned by this expression must match the attribute's data type. <br> **Note**: When this is provided, `validation` is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formula" })
  formula?: string;

  /**
   * 24-character system-generated attribute ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Attribute name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Conditionally required to indicate the selectable values for `OPTIONS` attribute type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "optionsType" })
  optionsType?: BulkAttributeRequestOptionsTypeEnum;

  /**
   * Conditionally required to indicate the starting value of `SERIAL` attribute type. When enabled, the subsequent attribute values increment by 1.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serialStart" })
  serialStart?: number;

  /**
   * Conditionally required for `TEXT` attribute type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textSubType" })
  textSubType?: BulkAttributeRequestTextSubTypeEnum;

  /**
   * Supported attribute types for the attribute
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: BulkAttributeRequestTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "validation" })
  @Type(() => BulkAttributeRequestValidation)
  validation?: BulkAttributeRequestValidation;
}
