/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StatusResponse } from "./statusresponse";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Status type
 */
export enum FileResponseTypeEnum {
  Import = "IMPORT",
  Export = "EXPORT",
}

export class FileResponse extends SpeakeasyBase {
  /**
   * User ID that created the file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  createdBy?: string;

  /**
   * Time of file creation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdOn?: Date;

  /**
   * User ID that last modified the file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedBy" })
  modifiedBy?: string;

  /**
   * Time when file was last modified
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modifiedOn?: Date;

  /**
   * File name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Import progress in percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "progress" })
  progress?: number;

  /**
   * Time taken to import the file (doesn't include the whole time for the full bulk import process).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secondsTakenToImport" })
  secondsTakenToImport?: number;

  /**
   * Time taken to process the file after the file was read
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secondsTakenToProcess" })
  secondsTakenToProcess?: number;

  /**
   * Current status of the file
   */
  @SpeakeasyMetadata({ elemType: StatusResponse })
  @Expose({ name: "statuses" })
  @Type(() => StatusResponse)
  statuses?: StatusResponse[];

  /**
   * Status type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: FileResponseTypeEnum;
}
