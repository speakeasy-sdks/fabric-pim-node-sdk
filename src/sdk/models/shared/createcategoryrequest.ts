/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Category type. Specify this field to create a new root category. Applicable only if `parentNodeId` is omitted.
 */
export enum CreateCategoryRequestTypeEnum {
  Alternate = "ALTERNATE",
  Primary = "PRIMARY",
}

export class CreateCategoryRequest extends SpeakeasyBase {
  /**
   * true: Category is Active <br> false: Category is Inactive <br> **Note**: When `type` is Primary, `status` must be Active. Inactive status is not applicable for Primary category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Category name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The order in which this child category appears among the sibling categories (of the same parent). <br> **Note**: <br> 1) Applicable only for children categories. <br> 2) Order 0 means this child category appears at the beginning of other sibling categories. <br> 3) Unless order is specified, the child category appears at the end.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  order?: number;

  /**
   * Human-readable numeric ID of parent category. If omitted, new category is created under the root category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentNodeId" })
  parentNodeId?: number;

  /**
   * Category type. Specify this field to create a new root category. Applicable only if `parentNodeId` is omitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CreateCategoryRequestTypeEnum;
}
