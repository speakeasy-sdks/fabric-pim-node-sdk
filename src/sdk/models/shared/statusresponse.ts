/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Status source
 */
export enum StatusResponseSourceEnum {
  Pim = "PIM",
  Wam = "WAM",
}

/**
 * Status type
 */
export enum StatusResponseTypeEnum {
  Attribute = "ATTRIBUTE",
  AttributeValue = "ATTRIBUTE_VALUE",
  Item = "ITEM",
  Bundle = "BUNDLE",
  Node = "NODE",
  Hierarchy = "HIERARCHY",
}

export class StatusResponse extends SpeakeasyBase {
  /**
   * Status code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * User ID that created the file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  createdBy?: string;

  /**
   * Time of file creation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdOn?: Date;

  /**
   * Status description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * User ID that last modified the file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedBy" })
  modifiedBy?: string;

  /**
   * Time when file was last modified
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modifiedOn?: Date;

  /**
   * Status name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Status source
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: StatusResponseSourceEnum;

  /**
   * Status type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: StatusResponseTypeEnum;
}
