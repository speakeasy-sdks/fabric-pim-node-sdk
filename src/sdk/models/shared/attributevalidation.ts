/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum AttributeValidationAttributeTypesEnum {
  Text = "TEXT",
  Boolean = "BOOLEAN",
  Serial = "SERIAL",
  Decimal = "DECIMAL",
  Integer = "INTEGER",
  Asset = "ASSET",
  Datetime = "DATETIME",
}

/**
 * Specified range of values must be between this min and/or max
 */
export class AttributeValidationRange extends SpeakeasyBase {
  /**
   * Specified value must be less than or equal to this value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max" })
  max?: any;

  /**
   * Specified value must be greater than or equal to this value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "min" })
  min?: any;
}

export class AttributeValidation extends SpeakeasyBase {
  /**
   * List of supported attribute types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributeTypes" })
  attributeTypes?: AttributeValidationAttributeTypesEnum[];

  /**
   * Specified value must contain this string
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contains" })
  contains?: string;

  /**
   * Specified value must exactly match this value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exact" })
  exact?: any;

  /**
   * JavaScript expression to determine if the value matches
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formula" })
  formula?: string;

  /**
   * true: Parent attributes are inherited to children items <br> false: Parent attributes are not inherited to children items.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inheritable" })
  inheritable?: boolean;

  /**
   * true: Inverts existing validation (example - requires that the validation does not pass) <br> false: Follows existing validation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inverse" })
  inverse?: boolean;

  /**
   * Match the value if it is one of these.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oneOf" })
  oneOf?: any;

  /**
   * Specified range of values must be between this min and/or max
   */
  @SpeakeasyMetadata()
  @Expose({ name: "range" })
  @Type(() => AttributeValidationRange)
  range?: AttributeValidationRange;

  /**
   * Indicates mandatory attribute
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required?: boolean;

  /**
   * true: Value is unique across all items or categories <br> false: Value is not unique
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unique" })
  unique?: boolean;
}
