/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GetBundleItems } from "./getbundleitems";
import { ProductAttribute } from "./productattribute";
import { ProductCategory } from "./productcategory";
import { Expose, Type } from "class-transformer";

export class Bundle extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ProductAttribute })
  @Expose({ name: "attributes" })
  @Type(() => ProductAttribute)
  attributes?: ProductAttribute[];

  @SpeakeasyMetadata({ elemType: GetBundleItems })
  @Expose({ name: "bundleItems" })
  @Type(() => GetBundleItems)
  bundleItems?: GetBundleItems[];

  @SpeakeasyMetadata({ elemType: ProductCategory })
  @Expose({ name: "categories" })
  @Type(() => ProductCategory)
  categories?: ProductCategory[];

  /**
   * Time of bundle creation (UTC format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdOn" })
  createdOn?: string;

  /**
   * Item ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemId" })
  itemId?: number;

  /**
   * Time when bundle was last updated (UTC format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifiedOn" })
  modifiedOn?: string;

  /**
   * Stock Keeping Unit (SKU), a unique identifier of bundle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  /**
   * true: Bundle is active <br> false: Bundle is inactive
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: boolean;

  /**
   * Item type - Bundle (default) or Item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
