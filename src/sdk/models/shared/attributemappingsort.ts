/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Sorting direction
 */
export enum AttributeMappingSortDirectionEnum {
  Asc = "ASC",
  Desc = "DESC",
}

/**
 * The field to sort must be specified. Sorting is based on the attribute's *raw* value.
 */
export enum AttributeMappingSortFieldEnum {
  CreatedOn = "createdOn",
  UpdatedOn = "updatedOn",
  Mapping = "mapping",
}

/**
 * Individual fields to sort
 */
export class AttributeMappingSort extends SpeakeasyBase {
  /**
   * Sorting direction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: AttributeMappingSortDirectionEnum;

  /**
   * The field to sort must be specified. Sorting is based on the attribute's *raw* value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "field" })
  field?: AttributeMappingSortFieldEnum;
}
