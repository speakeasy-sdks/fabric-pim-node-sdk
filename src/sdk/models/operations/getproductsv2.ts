/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Type } from "class-transformer";

/**
 * Item status. <br> **Note**: <br> 1) Returns a paginated response. <br> 2) When used as the only criteria, must be paired with `size` and `page` to accommodate large data.
 */
export enum GetProductsV2StatusEnum {
  Active = "ACTIVE",
  Inactive = "INACTIVE",
}

/**
 * Item type. **Note**: Set page and size to use this filter.
 */
export enum GetProductsV2TypeEnum {
  Item = "ITEM",
  Bundle = "BUNDLE",
}

export class GetProductsV2Request extends SpeakeasyBase {
  /**
   * List of items created after a specific date. Valid date formats are 'YYYY/MM/DD', 'YYYY-MM-DDTHH:mm:ss.SSSZ'. <br> **Note**: <br> 1) Applicable only when `skus` and `itemIds` are omitted <br> 2) Returns paginated response <br> 3) Must be paired with `size` and `page` to accommodate large data
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdAfter",
  })
  createdAfter?: string;

  /**
   * List of items created before a specific date. Valid date formats are 'YYYY/MM/DD', 'YYYY-MM-DDTHH:mm:ss.SSSZ'. <br> **Note**: <br> 1) Applicable only when `skus` and `itemIds` are omitted <br> 2) Returns paginated response <br> 3) Must be paired with `size` and `page` to accommodate large data
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdBefore",
  })
  createdBefore?: string;

  /**
   * List of items modified after a specific date. Valid date formats are 'YYYY/MM/DD', 'YYYY-MM-DDTHH:mm:ss.SSSZ'. <br> **Note**: <br> 1) Applicable only when `skus` or `itemIds` are omitted <br> 2) Returns paginated response <br> 3) Must be paired with `size` and `page` to accommodate large data
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=modifiedAfter",
  })
  modifiedAfter?: string;

  /**
   * List of items modified before a specific date. Valid date formats are 'YYYY/MM/DD', 'YYYY-MM-DDTHH:mm:ss.SSSZ'. <br> **Note**: <br> 1) Applicable only when `skus` and `itemIds` are omitted <br> 2) Returns paginated response <br> 3) Must be paired with `size` and `page` to accommodate large data
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=modifiedBefore",
  })
  modifiedBefore?: string;

  /**
   * Page number to be retrieved. Applicable only in a paginated response and always paired with `size`.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Parent SKU to get its children items. <br> **Note** <br> 1) To get a p paginates response, optionally, `size` and `page` can be used as query parameters. When they are omitted, this endpoint returns all children. <br> 2) Only `page` and `size` are supported with this query parameter.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parentSku",
  })
  parentSku?: string;

  /**
   * Number of records per page. Applicable only in a paginated response and always paired with `page`.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=size" })
  size?: number;

  /**
   * Stock Keeping Units (SKUs). <br> **Note**: Either `skus` or `itemIds` can be used to get specific items. If they are omitted, all items are returned in a paginated response. As a result, `page` and `size` become mandatory to accommodate large data.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=skus" })
  skus?: string;

  /**
   * Item status. <br> **Note**: <br> 1) Returns a paginated response. <br> 2) When used as the only criteria, must be paired with `size` and `page` to accommodate large data.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: GetProductsV2StatusEnum;

  /**
   * Item type. **Note**: Set page and size to use this filter.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: GetProductsV2TypeEnum;

  /**
   * JSON object containing `channel`, `account`, `stage`, `date`, and `site` <br> .
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-site-context",
  })
  xSiteContext?: shared.XSiteContext;
}

export class GetProductsV2Response extends SpeakeasyBase {
  /**
   * Client error
   */
  @SpeakeasyMetadata()
  clientError?: shared.ClientError;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Internal server error
   */
  @SpeakeasyMetadata()
  serverError?: shared.ServerError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getProductsV2200ApplicationJSONOneOf?: any;
}
