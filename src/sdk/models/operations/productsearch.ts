/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Item type
 */
export enum ProductSearchTypeEnum {
  Item = "ITEM",
  Bundle = "BUNDLE",
  All = "ALL",
}

export class ProductSearchRequest extends SpeakeasyBase {
  /**
   * true: Gets all attributes. false: Gets only the mapped attributes. <br> **Note**: Always clubbed with `page` and `size`. If values are not specified, the default values are page = 1 and size = 10. As a result, endpoint returns the first 10 items with all their attributes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=allAttributes",
  })
  allAttributes?: boolean;

  /**
   * true: Excludes children items <br> false: Includes children items
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=excludeChildren",
  })
  excludeChildren?: boolean;

  /**
   * Item IDs. <br> **Note**: If omitted, all items are retrieved <br> Applicable only when `keyword` and `skus` are omitted.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=itemIds",
  })
  itemIds?: string[];

  /**
   * Keywords related to SKU or title
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=keyword",
  })
  keyword?: string;

  /**
   * true: Excludes parent items <br> false: Includes parent items
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=onlyChildren",
  })
  onlyChildren?: boolean;

  /**
   * Page number to be retrieved.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Number of records per page. <br>**Note**: 1) Always paired with `page`. <br>2) Applicable only in a paginated response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=size" })
  size?: number;

  /**
   * Searches for items based on SKU. <br> **Note**: If omitted, all items are retrieved. <br> Applicable only when `keyword` is omitted.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=skus" })
  skus?: string[];

  /**
   * Item type
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: ProductSearchTypeEnum;

  /**
   * JSON object containing `channel`, `account`, `stage`, `date`, and `site` <br> .
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-site-context",
  })
  xSiteContext?: shared.XSiteContext;
}

export class ProductSearchResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  clientError?: shared.ClientError;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Internal server error
   */
  @SpeakeasyMetadata()
  serverError?: shared.ServerError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  productSearch200ApplicationJSONOneOf?: any;
}
